prefFlags:
  codeSource: "git"
  devMode: False
  autoStart: False
  autoUpdate: False
  notifyRelease: True
  showDemo: True
  optDiags: False
  metrics: False
  saveAudio: False
  saveText: True
  # TODO: These should go somewhere in HAL/Enclosure
  localGui: True
  guiEvents: True

interface:
# True, False
  display_neon_brain: False
  wake_word_enabled: True
  clap_commands_enabled: False
  blink_commands_enabled: False
  random_dialog_enabled: False
  confirm_listening: True
  mute_on_listen: False
  # True=Muted, False=lowered vol
  use_hesitation: False

devVars:
  devName:
  devType: generic
  # generic, server, pi, neonK, neonX, neonPi, neonAlpha, neonU, mycroft_mark_2, ubuntu, linux
  version:
  touchDev:
  micDev:
  camDev: 0
  soundDev:
  defaultVolume: 60
  defaultMicVolume: 100
  installUser:
  # TODO: Depreciate installUser

gestures:
  clapThreshold: 10.0e10

audioService:
  backends:
    local: {type: simple, active: true}
    vlc: {type: vlc, active: true, duck: true}
  defaultBackend: vlc
  debug: True

padatious:
  intent_cache: ~/.neon/intent_cache
  train_delay: 4
  single_thread: false

websocket:
  host: "0.0.0.0"
  port: 8181
  route: "/core"
  ssl: false
  shared_connection: true
  # If false, one object per client
  allow_self_signed: true
  ssl_cert:
  ssl_key:

gui:
  # TODO: This should be built so lang, enclosure are read from other places
  # Host information for the gui server
  lang: en-us
  enclosure: generic
  host: 0.0.0.0
  port: 18181
  route: /gui
  ssl: false
  resource_root: https://0000.us/klatchat/app/files/neon_qml
  # resource_root is deprecated; use file_server to specify network QML files
  file_server:

hotwords:
  Hey Neon: { module: ovos-ww-plugin-pocketsphinx,
              phonemes: HH EY . N IY AA N .,
              threshold: 1e-20,
              lang: en-us,
              sample_rate: 16000,
              listen: True,
              sound: snd/start_listening.wav,
              local_model_file: None
              }

listener:
  sample_rate: 16000
  channels: 1
  wake_word_upload: {disable: True,
                     url: "https://training.mycroft.ai/precise/upload"}
  mute_during_output: True
  duck_while_listening: 0.3
  dev_index:
  phoneme_duration: 120
  multiplier: 1.0
  energy_ratio: 1.5
  wake_word: hey neon
  stand_up_word: wake up
  recording_timeout: 10.0,
  recording_timeout_with_silence: 3.0

skills:
  auto_update: True
  install_essential: True
  install_default: True
  wait_for_internet: True
  debug: True
  run_gui_file_server: False
  blacklist: []
  priority: [
    "skill-about.neongeckocom",
    "skill-date_time.neongeckocom",
    "skill-weather.neongeckocom",
    "skill-ovos-homescreen.openvoiceos",
    "skill-balena-wifi-setup.openvoiceos"
  ]
  essential_skills: []
  default_skills: https://raw.githubusercontent.com/NeonGeckoCom/neon_skills/master/skill_lists/DEFAULT-SKILLS
  skill_manager: "osm"
  # recommended osm, optional msm
  appstore_sync_interval: 6.0
  # time between server syncs in hours
  auto_update_interval: 24.0
  # time between automatic skill updates in hours
  msm_ver: False
  repo_url: "https://github.com/NeonGeckoCom/neon_skills"
  repo_branch: "18.08"
  data_dir: "~/.neon/msm"
  neon_token:
  extra_directories: []

audio_parsers:
  blacklist: ["gender"]

text_parsers:
  blacklist: []

session:
  ttl: 180
tts:
  module: amazon
  amazon: {
    region: 'us-west-2',
    aws_access_key_id: '',
    aws_secret_access_key: ''
  }
  mozilla: { "request_url": "http://0.0.0.0:5002/api/tts?" }
  mimic: { "voice": "ap" }
  mimic2: {
    "lang": "en-us",
    "url": "https://mimic-api.mycroft.ai/synthesize?text="
  }
stt:
  module: google_cloud_streaming

language:
  boost: False
  core_lang: en-us
  translation_module: libretranslate_plug
  detection_module: libretranslate_detection_plug
  libretranslate: {"libretranslate_host": "https://translate.neon.ai:5000"}

logs:
  blacklist: ["enclosure.mouth.viseme", "enclosure.mouth.display"]
  log_level: INFO

device:
  mac: 00:00:00:00:00:00
  ip4: 127.0.0.1
  ip6: ::1
  ver: ''

api:
  url: https://api.mycroft.ai
  version: v1
  update: true
  disabled: true
  sync_skill_settings: false

# Below are (mostly) depreciated DM

remoteVars:
  coreGit:
  coreBranch:
  skillsGit:
  skillsBranch:
  guiGit:
  guiBranch:
  url: https://api.mycroft.ai
  ver: v1
  remoteHost: 167.172.112.7
  enableConnection: true

gnome:
  favApps:
  appFolders: "['accessories', 'office', 'Neongecko']"

dirVars:
  rootDir: ~/.local/share/neon
  confDir: ~/.config/neon
  cacheDir: ~/.cache/neon
  skillsDir: ~/.local/share/neon/skills
  ipcDir: /tmp/neon/ipc
  # Changes to ipcDir must also be made in NGI/utilities/configHelper
  logsDir:

# File paths should be absolute (or ~/ relative) or relative to /res/ (see resolve_resource_file)
fileVars:
  sshKey: ~/.ssh/id_rsa
  notify: snd/loaded.wav

sounds:
  startListening: snd/start_listening.wav
  endListening: snd/end_listening.wav
  acknowledge: snd/acknowledge.mp3

ready_settings:
  # pairing -> device is paired
  # internet -> device is connected to the internet - NOT IMPLEMENTED
  # skills -> skills reported ready
  # speech -> stt reported ready
  # audio -> audio playback reported ready
  # gui -> gui websocket reported ready - NOT IMPLEMENTED
  # enclosure -> enclosure/HAL reported ready - NOT IMPLEMENTED
  - skills
  - speech
  - audio

signal:
  use_signal_files: True
  max_wait_seconds: 300

MQ:
  server: api.neon.ai
  port: 5672
  users:
    mq_handler:
      user: 'neon_api_utils'
      password: 'Klatchat2021'